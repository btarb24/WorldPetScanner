local file="PetDataEntryHelper"

local PETC = PetCollector
local DISPLAY = PETC.DISPLAY
local UTILITIES = PETC.UTILITIES
local PETS = PETC.PETS

local csvPets = {2,
39,
40,
41,
42,
43,
44,
45,
46,
47,
49,
50,
51,
52,
55,
56,
57,
58,
59,
64,
65,
67,
68,
69,
121,
70,
72,
74,
75,
77,
78,
83,
84,
85,
86,
87,
89,
90,
92,
93,
94,
95,
106,
107,
111,
114,
115,
116,
117,
118,
119,
120,
122,
124,
125,
126,
127,
128,
130,
131,
132,
136,
137,
138,
139,
140,
141,
142,
143,
144,
145,
146,
149,
153,
155,
156,
157,
891,
158,
159,
160,
162,
163,
164,
165,
166,
167,
168,
169,
170,
171,
172,
173,
174,
175,
179,
180,
183,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
197,
198,
199,
200,
201,
202,
203,
204,
205,
206,
207,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
220,
224,
225,
226,
227,
228,
229,
231,
232,
233,
234,
235,
236,
237,
238,
239,
240,
241,
242,
243,
244,
245,
246,
247,
248,
249,
250,
251,
253,
254,
255,
256,
257,
258,
259,
260,
261,
262,
264,
265,
266,
267,
268,
270,
271,
272,
277,
278,
279,
280,
281,
282,
283,
285,
892,
286,
287,
289,
291,
292,
293,
294,
296,
297,
298,
301,
302,
303,
306,
307,
308,
309,
310,
311,
316,
317,
318,
319,
320,
321,
323,
325,
893,
328,
329,
330,
331,
332,
333,
335,
336,
337,
338,
339,
340,
341,
342,
343,
344,
345,
346,
347,
348,
354,
374,
375,
378,
379,
380,
381,
382,
383,
384,
385,
386,
387,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404,
405,
406,
894,
407,
408,
409,
410,
411,
412,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
425,
427,
428,
429,
430,
431,
432,
433,
434,
437,
438,
439,
440,
441,
442,
443,
444,
445,
446,
447,
448,
449,
450,
452,
453,
454,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467,
468,
469,
470,
471,
472,
473,
474,
475,
476,
477,
478,
479,
480,
482,
483,
484,
485,
486,
487,
488,
489,
491,
492,
493,
494,
495,
496,
497,
895,
498,
499,
500,
502,
503,
504,
505,
506,
507,
508,
509,
510,
511,
512,
513,
514,
515,
517,
518,
519,
521,
523,
525,
528,
529,
530,
532,
534,
535,
536,
896,
537,
538,
539,
540,
541,
542,
543,
544,
545,
546,
547,
548,
549,
550,
552,
553,
554,
555,
556,
557,
558,
559,
560,
562,
564,
565,
566,
567,
568,
569,
570,
897,
571,
572,
573,
626,
627,
628,
629,
630,
631,
632,
633,
634,
635,
637,
638,
639,
640,
641,
644,
645,
646,
647,
648,
649,
650,
652,
665,
666,
671,
675,
677,
678,
679,
680,
699,
702,
703,
705,
706,
707,
708,
709,
710,
711,
712,
713,
714,
715,
716,
717,
718,
722,
723,
724,
725,
726,
727,
728,
729,
730,
898,
899,
731,
732,
733,
737,
739,
740,
741,
742,
743,
744,
745,
746,
747,
748,
749,
750,
751,
752,
753,
754,
755,
756,
757,
758,
792,
800,
802,
817,
818,
819,
820,
821,
823,
824,
825,
826,
827,
828,
829,
830,
831,
832,
833,
834,
835,
836,
837,
838,
844,
845,
846,
847,
848,
849,
850,
851,
855,
856,
868,
872,
873,
874,
875,
876,
877,
878,
879,
880,
881,
882,
883,
884,
885,
886,
887,
888,
889,
890,
900,
901,
902,
903,
904,
905,
906,
907,
908,
909,
911,
912,
913,
915,
916,
917,
921,
922,
923,
924,
925,
926,
927,
928,
929,
931,
932,
933,
934,
935,
936,
937,
938,
939,
941,
942,
943,
944,
945,
946,
947,
948,
949,
950,
951,
952,
953,
954,
955,
956,
957,
958,
959,
960,
961,
962,
963,
964,
965,
966,
967,
968,
969,
970,
971,
972,
973,
974,
975,
976,
977,
978,
979,
980,
981,
982,
983,
984,
985,
986,
987,
988,
989,
990,
991,
992,
993,
994,
995,
996,
997,
998,
999,
1000,
1001,
1002,
1003,
1004,
1005,
1006,
1007,
1008,
1009,
1010,
1011,
1012,
1013,
1039,
1040,
1042,
1061,
1062,
1063,
1065,
1066,
1067,
1068,
1073,
1117,
1124,
1257,
1125,
1126,
1127,
1128,
1129,
1130,
1131,
1132,
1133,
1134,
1135,
1136,
1137,
1138,
1139,
1140,
1141,
1142,
1143,
1144,
1145,
1146,
1147,
1149,
1150,
1151,
1152,
1153,
1154,
1155,
1156,
1157,
1158,
1159,
1160,
1161,
1162,
1163,
1164,
1165,
1166,
1167,
1168,
1174,
1175,
1176,
1177,
1178,
1179,
1180,
1181,
1182,
1183,
1184,
1185,
1187,
1188,
1189,
1190,
1191,
1192,
1193,
1194,
1195,
1196,
1197,
1198,
1200,
1201,
1202,
1204,
1205,
1206,
1207,
1208,
1209,
1211,
1212,
1213,
1226,
1227,
1228,
1229,
1230,
1231,
1232,
1233,
1234,
1235,
1236,
1237,
1238,
1243,
1244,
1245,
1247,
1248,
1255,
1256,
1258,
1259,
1266,
1267,
1268,
1269,
1271,
1276,
1277,
1278,
1279,
1280,
1281,
1282,
1283,
1284,
1285,
1286,
1287,
1288,
1289,
1290,
1291,
1292,
1293,
1295,
1296,
1297,
1298,
1299,
1300,
1301,
1303,
1304,
1305,
1311,
1317,
1319,
1320,
1321,
1322,
1323,
1324,
1325,
1326,
1328,
1502,
1329,
1330,
1331,
1332,
1333,
1334,
1335,
1336,
1337,
1338,
1339,
1343,
1344,
1345,
1346,
1348,
1349,
1350,
1351,
1352,
1354,
1363,
1364,
1365,
1384,
1385,
1386,
1503,
1387,
1394,
1395,
1396,
1400,
1401,
1402,
1403,
1409,
1410,
1411,
1412,
1416,
1420,
1423,
1424,
1426,
1427,
1428,
1429,
1430,
1431,
1432,
1433,
1434,
1435,
1441,
1442,
1443,
1444,
1446,
1447,
1448,
1449,
1450,
1504,
1451,
1453,
1454,
1455,
1456,
1457,
1458,
1462,
1463,
1464,
1465,
1466,
1467,
1468,
1469,
1470,
1471,
1472,
1473,
1474,
1475,
1476,
1477,
1478,
1479,
1480,
1482,
1483,
1484,
1485,
1486,
1487,
1488,
1489,
1490,
1492,
1493,
1494,
1495,
1496,
1497,
1498,
1499,
1500,
1501,
1505,
1506,
1507,
1508,
1509,
1510,
1511,
1514,
1515,
1516,
1517,
1518,
1519,
1521,
1523,
1524,
1530,
1531,
1532,
1533,
1536,
1537,
1538,
1539,
1540,
1541,
1542,
1543,
1544,
1545,
1858,
1546,
1547,
1548,
1549,
1550,
1552,
1553,
1554,
1555,
1556,
1557,
1558,
1559,
1560,
1561,
1562,
1563,
1564,
1565,
1566,
1567,
1568,
1569,
1570,
1571,
1572,
1573,
1574,
1575,
1576,
1577,
1578,
1579,
1581,
1582,
1583,
1586,
1587,
1765,
1588,
1589,
1590,
1591,
1592,
1593,
1594,
1595,
1596,
1597,
1598,
1599,
1600,
1601,
1602,
1603,
1604,
1605,
1607,
1608,
1609,
1610,
1615,
1622,
1623,
1624,
1625,
1626,
1627,
1628,
1629,
1631,
1632,
1633,
1859,
1634,
1635,
1636,
1637,
1639,
1640,
1641,
1642,
1643,
1644,
1645,
1646,
1647,
1648,
1649,
1651,
1652,
1653,
1654,
1655,
1656,
1660,
1661,
1662,
1663,
1664,
1665,
1666,
1671,
1672,
1673,
1674,
1675,
1676,
1677,
1678,
1679,
1680,
1681,
1682,
1683,
1684,
1685,
1686,
1687,
1766,
1688,
1690,
1691,
1692,
1693,
1699,
1700,
1701,
1705,
1706,
1708,
1709,
1710,
1711,
1712,
1713,
1714,
1715,
1716,
1717,
1718,
1719,
1720,
1721,
1722,
1723,
1725,
1726,
1770,
1771,
1727,
1728,
1729,
1730,
1731,
1734,
1735,
1736,
1737,
1738,
1739,
1740,
1741,
1742,
1743,
1744,
1745,
1746,
1748,
1749,
1750,
1751,
1752,
1753,
1754,
1755,
1756,
1757,
1758,
1759,
1760,
1761,
1762,
1763,
1764,
1772,
1773,
1774,
1775,
1776,
1777,
1778,
1780,
1781,
1782,
1787,
1788,
1789,
1790,
1791,
1792,
1793,
1794,
1795,
1796,
1797,
1798,
1799,
1800,
1801,
1802,
1803,
1804,
1805,
1806,
1807,
1808,
1809,
1810,
1811,
1815,
1816,
1817,
1818,
1828,
1840,
1841,
1842,
1843,
1846,
1847,
1848,
1849,
1850,
1851,
1852,
1853,
1855,
1857,
1860,
1861,
1862,
1863,
1864,
1865,
1866,
1867,
1868,
1869,
1870,
1871,
1872,
1873,
1874,
1875,
1877,
1878,
1879,
1880,
1881,
1882,
1883,
1884,
1885,
1886,
1887,
1888,
1889,
1890,
1891,
1892,
1893,
1894,
1895,
1896,
1897,
1898,
1899,
1903,
1904,
1905,
1906,
1907,
1911,
1912,
1913,
1914,
1915,
1917,
2092,
1918,
1919,
1920,
1921,
1922,
1926,
1927,
1928,
1929,
1930,
1931,
1932,
1933,
1934,
1935,
1936,
1937,
1938,
1939,
1940,
1941,
1943,
1949,
1952,
1953,
1954,
1955,
1956,
2144,
1957,
1958,
1959,
1960,
1961,
1962,
1963,
1964,
1965,
1966,
1967,
1968,
1969,
1971,
1972,
1973,
1974,
1975,
1976,
1977,
1978,
1979,
1981,
1982,
1983,
1984,
1987,
1988,
1989,
1990,
1991,
1992,
1993,
1994,
1995,
1996,
1997,
1998,
1999,
2000,
2001,
2002,
2003,
2004,
2008,
2009,
2010,
2011,
2012,
2013,
2014,
2015,
2016,
2017,
2018,
2022,
2023,
2024,
2025,
2026,
2027,
2028,
2031,
2032,
2033,
2035,
2036,
2037,
2038,
2039,
2040,
2041,
2042,
2046,
2143,
2047,
2048,
2049,
2050,
2051,
2057,
2058,
2062,
2063,
2064,
2065,
2066,
2067,
2068,
2071,
2072,
2076,
2077,
2078,
2079,
2080,
2081,
2082,
2083,
2084,
2085,
2086,
2087,
2088,
2089,
2090,
2091,
2093,
2095,
2096,
2097,
2098,
2099,
2100,
2101,
2102,
2103,
2104,
2105,
2106,
2107,
2108,
2109,
2110,
2111,
2112,
2113,
2114,
2115,
2116,
2117,
2118,
2119,
2120,
2121,
2122,
2123,
2124,
2126,
2127,
2128,
2129,
2130,
2131,
2132,
2133,
2134,
2135,
2136,
2145,
2146,
2157,
2158,
2163,
2164,
2165,
2184,
2185,
2186,
2187,
2188,
2189,
2190,
2192,
2193,
2194,
2195,
2196,
2197,
2198,
2199,
2200,
2201,
2202,
2203,
2204,
2205,
2206,
2208,
2209,
2210,
2211,
2212,
2213,
2214,
2215,
2220,
2221,
2222,
2223,
2225,
2226,
2227,
2228,
2229,
2230,
2231,
2232,
2233,
2330,
2332,
2333,
2334,
2335,
2336,
2337,
2338,
2339,
2340,
2341,
2343,
2344,
2345,
2346,
2347,
2349,
2350,
2352,
2353,
2354,
2355,
2356,
2357,
2358,
2359,
2360,
2361,
2363,
2364,
2365,
2366,
2367,
2368,
2370,
2371,
2372,
2373,
2374,
2375,
2376,
2377,
2378,
2613,
2379,
2380,
2381,
2382,
2383,
2384,
2385,
2386,
2387,
2388,
2389,
2390,
2392,
2393,
2394,
2395,
2397,
2398,
2399,
2400,
2401,
2402,
2403,
2404,
2405,
2406,
2407,
2445,
2446,
2408,
2409,
2410,
2411,
2412,
2413,
2414,
2415,
2416,
2417,
2418,
2419,
2420,
2421,
2422,
2423,
2447,
2805,
2424,
2425,
2426,
2427,
2428,
2429,
2430,
2431,
2432,
2433,
2434,
2435,
2436,
2437,
2438,
2439,
2440,
2441,
2442,
2443,
2444,
2448,
2449,
2450,
2451,
2452,
2453,
2454,
2455,
2456,
2457,
2458,
2459,
2460,
2461,
2462,
2463,
2464,
2465,
2466,
2467,
2468,
2469,
2471,
2472,
2473,
2474,
2475,
2476,
2477,
2478,
2479,
2480,
2481,
2482,
2483,
2484,
2485,
2486,
2487,
2488,
2489,
2490,
2492,
2493,
2494,
2495,
2496,
2497,
2498,
2499,
2500,
2501,
2502,
2503,
2504,
2525,
2526,
2527,
2528,
2529,
2530,
2531,
2532,
2533,
2534,
2535,
2537,
2538,
2539,
2540,
2541,
2544,
2545,
2546,
2547,
2548,
2549,
2550,
2551,
2552,
2553,
2554,
2555,
2556,
2557,
2558,
2559,
2560,
2561,
2562,
2563,
2611,
2612,
2564,
2565,
2566,
2567,
2568,
2569,
2575,
2576,
2577,
2578,
2579,
2580,
2581,
2582,
2583,
2584,
2585,
2586,
2587,
2589,
2590,
2591,
2592,
2593,
2594,
2595,
2596,
2597,
2598,
2599,
2600,
2601,
2602,
2603,
2605,
2606,
2607,
2608,
2609,
2621,
2622,
2623,
2638,
2645,
2646,
2647,
2648,
2649,
2650,
2651,
2652,
2653,
2657,
2658,
2659,
2660,
2661,
2662,
2663,
2664,
2665,
2666,
2667,
2668,
2669,
2670,
2671,
2672,
2673,
2674,
2675,
2676,
2677,
2678,
2680,
2681,
2682,
2683,
2684,
2685,
2686,
2687,
2688,
2689,
2690,
2691,
2692,
2693,
2694,
2695,
2696,
2697,
2698,
2699,
2700,
2701,
2702,
2703,
2806,
2807,
2704,
2706,
2707,
2708,
2709,
2710,
2711,
2712,
2713,
2714,
2715,
2716,
2717,
2718,
2719,
2720,
2721,
2723,
2724,
2725,
2726,
2727,
2728,
2729,
2730,
2731,
2732,
2733,
2734,
2735,
2736,
2737,
2738,
2739,
2740,
2741,
2742,
2747,
2748,
2749,
2750,
2751,
2752,
2753,
2754,
2755,
2756,
2757,
2758,
2760,
2761,
2762,
2763,
2765,
2766,
2767,
2768,
2769,
2770,
2771,
2772,
2774,
2776,
2777,
2778,
2779,
2780,
2792,
2793,
2794,
2795,
2796,
2797,
2798,
2799,
2800,
2801,
2802,
2803,
2804,
2808,
2809,
2810,
2811,
2812,
2814,
2815,
2816,
2817,
2818,
2819,
2820,
2821,
2822,
2823,
2832,
2833,
2834,
2835,
2836,
2837,
2838,
2839,
2840,
2841,
2842,
2843,
2844,
2845,
2846,
2847,
2848,
2849,
2850,
2851,
2852,
2853,
2854,
2855,
2856,
2857,
2858,
2859,
2860,
2861,
2863,
2864,
2865,
2866,
2867,
2868,
2869,
2870,
2871,
2872,
2878,
2885,
2886,
2887,
2888,
2889,
2890,
2891,
2892,
2893,
2894,
2895,
2896,
2897,
2898,
2899,
2900,
2998,
2901,
2902,
2903,
2904,
2905,
2907,
2908,
2909,
2910,
2911,
2912,
2913,
2914,
2915,
2916,
2917,
2918,
2919,
2920,
2921,
2922,
2923,
2924,
2925,
2999,
2926,
2927,
2928,
2929,
2930,
2931,
2932,
2933,
2934,
2935,
2936,
2937,
2938,
2939,
2940,
2941,
2942,
2943,
2944,
2945,
2946,
2947,
2948,
2949,
2950,
2952,
3000,
2953,
2954,
2955,
2956,
2957,
2958,
2959,
2960,
2961,
2962,
2963,
2964,
2965,
2966,
2967,
2968,
2969,
2970,
2971,
2972,
2973,
2974,
2975,
2976,
2977,
2978,
2979,
2980,
2981,
2982,
2983,
2984,
2985,
2986,
2987,
2988,
2989,
2990,
2991,
2992,
2993,
2994,
2996,
3001,
3002,
3003,
3004,
3005,
3006,
3007,
3008,
3009,
3010,
3011,
3012,
3013,
3014,
3015,
3016,
3017,
3018,
3019,
3020,
3021,
3022,
3023,
3024,
3025,
3026,
3027,
3028,
3029,
3030,
3032,
3033,
3034,
3035,
3036,
3037,
3038,
3039,
3040,
3041,
3042,
3043,
3044,
3045,
3046,
3047,
3049,
3050,
3051,
3052,
3053,
3054,
3061,
3062,
3063,
3064,
3065,
3066,
3067,
3068,
3070,
3071,
3072,
3073,
3074,
3075,
3076,
3077,
3078,
3079,
3080,
3081,
3082,
3083,
3089,
3090,
3091,
3092,
3097,
3098,
3099,
3100,
3101,
3102,
3103,
3104,
3105,
3106,
3107,
3108,
3109,
3110,
3111,
3112,
3113,
3114,
3115,
3116,
3117,
3118,
3119,
3120,
3121,
3122,
3123,
3124,
3125,
3126,
3127,
3128,
3129,
3130,
3131,
3132,
3133,
3134,
3135,
3136,
3137,
3207,
3138,
3139,
3140,
3141,
3153,
3155,
3156,
3158,
3169,
3170,
3171,
3172,
3173,
3174,
3175,
3176,
3177,
3178,
3179,
3180,
3181,
3188,
3189,
3190,
3191,
3196,
3197,
3200,
3201,
3202,
3203,
3204,
3205,
3206,
3208,
3209,
3210,
3211,
3212,
3213,
3214,
3215,
3216,
3217,
3218,
3219,
3220,
3221,
3222,
3223,
3224,
3225,
3226,
3227,
3229,
3230,
3231,
3232,
3233,
3234,
3235,
3236,
3237,
3242,
3243,
3244,
3246,
3247,
3248,
3249,
3250,
3251,
3252,
3253,
3254,
3255,
3256,
3257,
3259,
3260,
3261,
3262,
3263,
3264,
3265,
3266,
3267,
3268,
3269,
3270,
3272,
3273,
3274,
3275,
3276,
3277,
3278,
3279,
3280,
3281,
3282,
3283,
3284,
3285,
3286,
3287,
3288,
3289,
3290,
3291,
3292,
3293,
3294,
3295,
3296,
3297,
3298,
3299,
3300,
3301,
3302,
3303,
3306,
3307,
3308,
3309,
3310,
3311,
3312,
3313,
3314,
3316,
3317,
3318,
3319,
3320,
3321,
3322,
3323,
3325,
3326,
3327,
3328,
3329,
3330,
3331,
3332,
3333,
3334,
3335,
3336,
3338,
3342,
3344,
3345,
3346,
3347,
3348,
3350,
3351,
3352,
3353,
3354,
3355,
3356,
3357,
3358,
3359,
3360,
3361,
3362,
3363,
3364,
3365,
3366,
3367,
3368,
3376,
3377,
3378,
3379,
3380,
3381,
3382,
3384,
3385,
3386,
3387,
3388,
3389,
3390,
3391,
3392,
3393,
3394,
3395,
3396,
3397,
3398,
3400,
3401,
3402,
3403,
3404,
3405,
3406,
3407,
3408,
3409,
3410,
3411,
3412,
3414,
3415,
3416,
3417,
3422,
3423,
3424,
3425,
3486,
3427,
3429,
3430,
3431,
3432,
3433,
3434,
3435,
3436,
3437,
3438,
3439,
3440,
3441,
3442,
3443,
3444,
3446,
3447,
3448,
3449,
3450,
3451,
3452,
3453,
3454,
3455,
3456,
3457,
3458,
3459,
3460,
3465,
3466,
3472,
3473,
3474,
3475,
3476,
3477,
3478,
3479,
3480,
3481,
3482,
3483,
3484,
3485,
4278,
3487,
3488,
3489,
3490,
3491,
3493,
3511,
3512,
3513,
3514,
3515,
3516,
3517,
3518,
3519,
3520,
3521,
3522,
3523,
3524,
3525,
3526,
3527,
3528,
3529,
3530,
3531,
3532,
3533,
3534,
3535,
3536,
4279,
3537,
3538,
3539,
3540,
3541,
3542,
3543,
3544,
3545,
3546,
3547,
3548,
3549,
3550,
3551,
3552,
3553,
3554,
3555,
3556,
3557,
3558,
3559,
3560,
3565,
3566,
3567,
3568,
3569,
3570,
3571,
3572,
3573,
3578,
3580,
3581,
3582,
3587,
3588,
3589,
3590,
3596,
3597,
3598,
3599,
3600,
3601,
3602,
3608,
3609,
3975,
4237,
4253,
4255,
4257,
4258,
4259,
4260,
4261,
4262,
4263,
4264,
4265,
4267,
4275,
4276,
4277,
4280,
4285,
4286,
4287,
4288,
4289,
4290,
4291,
4292,
4295,
4296,
4297,
4298,
4299,
4300,
4302,
4303,
4304,
4305,
4306,
4307,
4308,
4309,
4310,
4311,
4402,
4406,
4407,
4408,
4409,
4410,
4411,
4412,
4421,
4425,
4426,
4435,
4436,
4437,
4450,
4451,
4452,
4455,
4456,
4457,
4458,
4459,
4460,
4461,
4462,
4463,
4464,
4465,
4466,
4467,
4469,
4470,
4471,
4472,
4473,
4474,
4475,
4476,
4477,
4478,
4480,
4481,
4482,
4483,
4484,
4485,
4488,
4489,
4490,
4491,
4492,
4493,
4495,
4496,
4497,
4536,
4498,
4499,
4500,
4502,
4503,
4504,
4505,
4506,
4507,
4508,
4509,
4510,
4511,
4512,
4513,
4514,
4515,
4516,
4517,
4518,
4519,
4520,
4521,
4522,
4524,
4525,
4526,
4527,
4528,
4529,
4530,
4533,
4534,
4535,
4537,
4538,
4539,
4540,
4541,
4542,
4543,
4544,
4545,
4546,
4548,
4549,
4550,
4551,
4552,
4553,
4554,
4555,
4556,
4557,
4558,
4559,
4560,
4561,
4562,
4564,
4565,
4566,
4568,
4569,
4570,
4571,
4573,
4574,
4575,
4576,
4577,
4579,
4580,
4581,
4582,
4583,
4584,
4586,
4589,
4590,
4591,
4594,
4595,
4596,
4597,
4598,
4599,
4602,
4615,
4616,
3579,
4266,
4316}

local function EnsureBPBIDLoaded()
    --must have BattlePetBreedID addon loaded
    if (not BPBID_Arrays) then
        print("must have BattlePetBreedID addon loaded to get breed info")
        return
    end

    if (not BPBID_Arrays.BreedsPerSpecies) then
        BPBID_Arrays.InitializeArrays()
    end
end

local function DeserializeCommaDelim(locationsStr)
    local split = strsplittable(",", locationsStr)
    local result = ""
    for i = 1, #split do
        result = result.."\""..strtrim(split[i]).."\""
        if i ~= #split then
            result = result..", "
        end
    end
    return result
end

local function ExtractNPC(locationsStr)
    local split = UTILITIES:split(locationsStr, "|r", true)
    return DeserializeCommaDelim(UTILITIES:split(split[2], "|n", true)[1])
end

local function ExtractZones(locationsStr)
    local split = UTILITIES:split(locationsStr, "|r", true) -- |r
    return DeserializeCommaDelim(split[#split])
end

local function ExtractVendorZone(locationsStr)
    local split = UTILITIES:split(locationsStr, "|r", true)
    return DeserializeCommaDelim(UTILITIES:split(split[3], "|n", true)[1])
end

local function GetPossibleBreedsBySpeciesID(speciesID)
    local breedIds = BPBID_Arrays.BreedsPerSpecies[tonumber(speciesID)]
    if not breedIds then
        return "unknown"
    end

    local result = ""
    for i = 1, #breedIds do
        result = result..tostring(breedIds[i])
        if i ~= #breedIds then
            result = result..", "
        end
    end

    return result
end

local function GetBaseStatsBySpeciesID(speciesID)
    local baseStats = BPBID_Arrays.BasePetStats[tonumber(speciesID)]
    if not baseStats then
        return "unknown"
    end

    local result = ""
    for i = 1, #baseStats do
        result = result..tostring(baseStats[i])
        if i ~= #baseStats then
            result = result..", "
        end
    end

    return result
end

local function GetCurrency(tooltipSource)
    if strfind(tooltipSource, "MONEYFRAME") then
        return "gold"
    elseif strfind(tooltipSource, "Currency_PetBattle") then
        return "charms"
    else
        return "item"
    end
end

local function ParseMoreSourceData(tooltipSource)
    print("-------------------------")
    print(tooltipSource)
    local source, locations = strsplit(":", tooltipSource);
    if strfind(tooltipSource, "Achievement") then
        return "        source = \"Achievement\",\n"..
               "        achievementName = "..ExtractNPC(tooltipSource)..",\n"..
               "        achievementId = \"\",\n"
    elseif strfind(tooltipSource, "Pet Battle") then
        return "        source = \"Pet Battle\",\n"..
               "        locationsRaw = {"..DeserializeCommaDelim(locations).."},\n"
    elseif strfind(tooltipSource, "Fishing") then
        return "        source = \"Fishing\",\n"..
               "        locationsRaw = {"..ExtractZones(tooltipSource).."},\n"
    elseif strfind(tooltipSource, "Archaeology") then
        return "        source = \"Archaeology\",\n"
    elseif strfind(tooltipSource, "Profession") then
        return "        source = \"Profession\",\n"..
               "        profession = \""..strtrim(locations).."\",\n"
    elseif strfind(tooltipSource, "World Event") then
        return "        source = \"World Event\",\n"..
               "        event = "..ExtractNPC(tooltipSource)..",\n"
    elseif strfind(tooltipSource, "Vendor") then
        return "        source = \"Vendor\",\n"..
               "        currency = \""..GetCurrency(tooltipSource).."\",\n"..
               "        npc = {"..ExtractNPC(tooltipSource).."},\n"..
               "        locationsRaw = {"..ExtractVendorZone(tooltipSource).."},\n"
    elseif strfind(tooltipSource, "World Drop") then
        return "        source = \"World Drop\",\n"..
               "        locationsRaw = {"..ExtractZones(tooltipSource).."},\n"
    elseif strfind(tooltipSource, "Drop") then
        return "        source = \"Drop\",\n"..
               "        npc = {"..ExtractNPC(tooltipSource).."},\n"..
               "        locationsRaw = {"..ExtractZones(tooltipSource).."},\n"
    elseif strfind(tooltipSource, "Quest") then
        return "        source = \"Quest\",\n"..
               "        quest = "..ExtractNPC(tooltipSource)..",\n"..
               "        locationsRaw = {"..ExtractVendorZone(tooltipSource).."},\n"
    elseif strfind(tooltipSource, "Promotion") then
        return "        source = \"Promotion\",\n"..
               "        promotion = "..ExtractNPC(tooltipSource)..",\n"
    elseif strfind(tooltipSource, "Trading Card Game") then
        return "        source = \"Trading Card Game\",\n"..
               "        tcg = "..ExtractNPC(tooltipSource)..",\n"
    elseif strfind(tooltipSource, "Treasure") then
        return "        source = \"Treasure\",\n"..
               "        item = "..ExtractNPC(tooltipSource)..",\n"..
               "        locationsRaw = {"..ExtractVendorZone(tooltipSource).."},\n"
    elseif strfind(tooltipSource, "Game Shop") then
        return "        source = \"In-Game Shop\",\n"
    elseif strfind(tooltipSource, "Trading Post") then
        return "        source = \"Trading Post\",\n"
    end
    
end

local function FindPetBySpeciesID(speciesID, raw)
    local speciesName, speciesIcon, petType, companionID, tooltipSource, flavor, isWild, canBattle, isTradable, isUnique, obtainable, creatureDisplayID
           = C_PetJournal.GetPetInfoBySpeciesID(speciesID)

    if not tooltipSource or tooltipSource == "" then
        return false
    end

    local result = ""..
    ",\n"..
    "    ["..speciesID.."] = {\n"..
    "        name = \""..speciesName.."\",\n"..
    "        speciesID = "..tostring(speciesID)..",\n"..
    "        companionID = "..tostring(companionID)..",\n"..
    "        petType = \""..PETS.FAMILIES[petType].."\",\n"..
    "        possibleBreeds = {"..GetPossibleBreedsBySpeciesID(speciesID).."},\n"..
    "        baseStats = {"..GetBaseStatsBySpeciesID(speciesID).."},\n"..
    "        isWild = "..tostring(isWild)..",\n"..
    "        isTradable = "..tostring(isTradable)..",\n"..
    "        isUnique = "..tostring(isUnique)..",\n"..
    "        canBattle = "..tostring(canBattle)..",\n"

        if raw then
            result = result .. tooltipSource.."\n"
        else
            local more = ParseMoreSourceData(tooltipSource)
            if more then
                result = result..more
            end
        end
    
    if flavor then
        result = result..
    "        flavor = \""..flavor.."\",\n"
    end
    if speciesIcon then
        result = result..
    "        iconPath = \""..speciesIcon.."\",\n"
    end
    if creatureDisplayID then
        result = result..
    "        displayID = "..creatureDisplayID..",\n"
    end
    result = result..
    "    }";

    PAPetDataEntryHelper.Text:SetText(result)
    PAPetDataEntryHelper.Text:HighlightText()
    PAPetDataEntryHelper.Text:SetFocus()
    return true
end

local function GetNextPet(raw)
    local curSpeciesIDTxt = PAPetDataEntryHelper.SpeciesEntry:GetText()
    if not curSpeciesIDTxt or curSpeciesIDTxt == "" then
        curSpeciesIDTxt = "1"
    end

    local curSpeciesID = tonumber(curSpeciesIDTxt)

    for i = curSpeciesID+1, #BPBID_Arrays.BreedsPerSpecies do
        if (BPBID_Arrays.BreedsPerSpecies[i]) then
            local isCollectable = FindPetBySpeciesID(i, raw)
            if (isCollectable) then
                PAPetDataEntryHelper.SpeciesEntry:SetText(i)
                return
            end
        end
    end
end

local function GetThisPet(raw)
    local curSpeciesIDTxt = PAPetDataEntryHelper.SpeciesEntry:GetText()
    local curSpeciesID = tonumber(curSpeciesIDTxt)

    local isCollectable = FindPetBySpeciesID(curSpeciesID, raw)
    if (isCollectable) then
        PAPetDataEntryHelper.SpeciesEntry:SetText(curSpeciesID)
        return
    end
end

local function CreateWindow()
    local f = CreateFrame("Frame", "PAPetDataEntryHelper", UIParent, "UIPanelDialogTemplate", "TitleDragAreaTemplate")
    f:SetResizable(true)
    f:SetSize(1200, 600)
    f:SetPoint("CENTER")
    f:SetFrameStrata("BACKGROUND")
    f:SetMovable(true)
    f:SetResizeBounds(200, 200)

    f.TitleArea = CreateFrame("Frame", nil, f)
    f.TitleArea:SetPoint("TOPLEFT", f, "TOPLEFT", 0, -40)
    f.TitleArea:SetPoint("BOTTOMRIGHT", f, "TOPRIGHT", -50, 0)
    f.TitleArea:EnableMouse(true)
    f.TitleArea:RegisterForDrag("LeftButton")
    f.TitleArea:SetScript("OnDragStart",
        function(self)
            PAPetDataEntryHelper.moving = true
            PAPetDataEntryHelper:StartMoving()
        end
    )
    f.TitleArea:SetScript("OnDragStop",
        function(self)
            PAPetDataEntryHelper.moving = nil
            PAPetDataEntryHelper:StopMovingOrSizing()
        end
    )
        
    f.ResizeButton = CreateFrame("Button", nil, f)
    f.ResizeButton:SetSize(16, 16)
    f.ResizeButton:SetPoint("BOTTOMRIGHT", f, -3,6)
    f.ResizeButton:SetNormalTexture("Interface\\ChatFrame\\UI-ChatIM-SizeGrabber-Up")
    f.ResizeButton:SetHighlightTexture("Interface\\ChatFrame\\UI-ChatIM-SizeGrabber-Highlight")
    f.ResizeButton:SetPushedTexture("Interface\\ChatFrame\\UI-ChatIM-SizeGrabber-Down")
    f.ResizeButton:SetScript("OnMouseDown", 
        function(self, button)
            PAPetDataEntryHelper:StartSizing("BOTTOMRIGHT")
            PAPetDataEntryHelper:SetUserPlaced(true)
        end)     
        f.ResizeButton:SetScript("OnMouseUp", 
        function(self, button)
            PAPetDataEntryHelper:StopMovingOrSizing()
        end)

    f.Close = CreateFrame("Button", "$parentClose", f)
    f.Close:SetSize(24, 24)
    f.Close:SetPoint("TOPRIGHT")
    f.Close:SetNormalTexture("Interface/Buttons/UI-Panel-MinimizeButton-Up")
    f.Close:SetPushedTexture("Interface/Buttons/UI-Panel-MinimizeButton-Down")
    f.Close:SetHighlightTexture("Interface/Buttons/UI-Panel-MinimizeButton-Highlight", "ADD")
    f.Close:SetScript("OnClick", function(self)
        self:GetParent():Hide()
    end)

    f.Select = CreateFrame("Button", "$parentSelect", f, "UIPanelButtonTemplate")
    f.Select:SetSize(14, 14)
    f.Select:SetPoint("RIGHT", f.Close, "LEFT")
    f.Select:SetText("S")
    f.Select:SetScript("OnClick", function(self)
        self:GetParent().Text:HighlightText() -- parameters (start, end) or default all
        self:GetParent().Text:SetFocus()
    end)

    local speciesEntryLbl = f:CreateFontString(nil, "OVERLAY", "GameFontHighlight");
    speciesEntryLbl:SetPoint("TOPLEFT", f, 20, -50)
    speciesEntryLbl:SetText("speciesID: ")
    f.SpeciesEntry = CreateFrame("EditBox", nil, f)
    f.SpeciesEntry:SetSize(100, 20)
    f.SpeciesEntry:SetPoint("LEFT", speciesEntryLbl, "RIGHT")
    f.SpeciesEntry:SetFontObject(GameFontNormal)
    f.SpeciesEntry:SetMaxLetters(100)
    f.SpeciesEntry.bg = f.SpeciesEntry:CreateTexture(nil, "BACKGROUND")
    f.SpeciesEntry.bg:SetAllPoints(true)
    f.SpeciesEntry.bg:SetColorTexture(.4, .4,.4,.7)
    f.SpeciesEntry:SetScript("OnEnterPressed", function(self) FindPetBySpeciesID(self:GetText()); self:SetText(""); end) 
    f.SpeciesEntry:SetScript("OnEscapePressed", function(self) self:ClearFocus() end) 

    f.ThisButton = CreateFrame("Button", nil, f, "UIPanelButtonTemplate")
    f.ThisButton:SetPoint("LEFT", f.SpeciesEntry, "RIGHT", 20,0)
    f.ThisButton:SetSize(80, 24)
    f.ThisButton:SetText("this")
    f.ThisButton:SetScript("OnClick", function(self)
        GetThisPet()
    end)

    f.RawButton = CreateFrame("Button", nil, f, "UIPanelButtonTemplate")
    f.RawButton:SetPoint("LEFT", f.ThisButton, "RIGHT", 10,0)
    f.RawButton:SetSize(80, 24)
    f.RawButton:SetText("raw")
    f.RawButton:SetScript("OnClick", function(self)
        GetThisPet(true)
    end)

    f.NextButton = CreateFrame("Button", nil, f, "UIPanelButtonTemplate")
    f.NextButton:SetPoint("LEFT", f.SpeciesEntry, "RIGHT", 20,-28)
    f.NextButton:SetSize(80, 24)
    f.NextButton:SetText("next")
    f.NextButton:SetScript("OnClick", function(self)
        GetNextPet()
    end)

    f.RawButton = CreateFrame("Button", nil, f, "UIPanelButtonTemplate")
    f.RawButton:SetPoint("LEFT", f.NextButton, "RIGHT", 10,0)
    f.RawButton:SetSize(80, 24)
    f.RawButton:SetText("raw")
    f.RawButton:SetScript("OnClick", function(self)
        GetNextPet(true)
    end)
    
    f.SF = CreateFrame("ScrollFrame", "$parent_DF", f, "UIPanelScrollFrameTemplate")
    f.SF:SetPoint("TOPLEFT", f, 12, -120)
    f.SF:SetPoint("BOTTOMRIGHT", f, -30, 30)
    f.SF.bg = f.SF:CreateTexture(nil, "BACKGROUND")
    f.SF.bg:SetAllPoints(true)
    f.SF.bg:SetColorTexture(.2, .2,.2,.1)

    f.Text = CreateFrame("EditBox", nil, f.SF)
    f.Text:SetSize(1400, 1000)
    f.Text:SetMultiLine(true)
    f.Text:SetPoint("TOPLEFT", f.SF)
    f.Text:SetPoint("BOTTOMRIGHT", f.SF)
    f.Text:SetMaxLetters(99999)
    f.Text:SetFontObject(GameFontNormal)
    f.Text:SetAutoFocus(false)
    f.Text.bg = f.Text:CreateTexture(nil, "BACKGROUND")
    f.Text.bg:SetAllPoints(true)
    f.Text.bg:SetColorTexture(.4, .4,.4,.7)
    f.Text:SetScript("OnEscapePressed", function(self) self:ClearFocus() end) 
    f.SF:SetScrollChild(f.Text)
    
    f.SF:GetHeight()
    f.Text:GetHeight()
end

function DISPLAY.PetDataEntryHelper:Show()
    EnsureBPBIDLoaded()
    if not PAPetDataEntryHelper then
        CreateWindow()
    end

    PAPetDataEntryHelper:Show()
end