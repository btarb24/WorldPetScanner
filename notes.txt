https://www.townlong-yak.com/framexml/live/Blizzard_APIDocumentation

/dump C_Map.GetBestMapForUnit('player')

/dump C_TaskQuest.IsActive(44894)

/dump AuraUtil   ....list methods

/dump C_UnitAuras.GetPlayerAuraBySpellID(11426)

/dump C_TaskQuest.GetQuestsForPlayerByMapID(2200)

/dump C_AreaPoiInfo.GetAreaPOISecondsLeft(poiInfo.areaPoiID)
/dump C_AreaPoiInfo.GetAreaPOIInfo(uiMapID, areaPoiID)
/dump C_AreaPoiInfo.GetAreaPOIForMap(uiMapID)

/script print(_VERSION)   .. prints the lua version in wow

TODO
* falkosaur pet food
* etherwyrm  - make sure A Shady Place quest is up as part of the criteria
* improve frame stata - same level as char / social / map/etc
* separate data for report?
* create Logging window that you turn on via chat command
* better option to 'show for collected pets'
* make dice icon a bit smaller so it VAligns with non-dice rewards
* font scaler option

DATA
* requiresScan -- for pets that show up Today's Events

IDEAS
* levelling - https://wago.io/5OWJmTGPp
* listen to events to remove completed Items
* alert when specifics are IsActive
* achievements
* Shinies for Flip  https://www.warcraftmounts.com/multi_look_companions.php

* seasons: snowy owl

TWW mouse event chaining: https://warcraft.wiki.gg/wiki/Patch_11.0.0/API_changes#Mouse_input_propagation -- wanted this for line item highlight + tooltip

PRIME / TWITCH / STORE DEPARTURE / Stuff like Snowy Owl etc - Only the starting and ending dates

WORLD EVENTS & TWITCH DROPS 
If there's more than 1 world event then the ones ending sooner come first

Charms & Stones (This is different between regions)
Expansions top-down but patches down-top, otherwise alphabetical order (in Legion the exception is Val'sharah, because of how the Broken Isles were planned out; it comes after Azsuna and before Highmountain). When BfA is involved short timers precede the longer ones

Dailies, WQ, etc by expansion
Top-down both expansions and patches, rarer events precede more frequent ones

    Dragonflight
+        Emerald Dream: Claws for Concern (every 16 days so can be automated)
x        Valdrakken: Little Scales Daycare (6 minor dailies + 5 pairs of major dailies giving rise to 30 combinations, can be automated)
+        Zaralek Cavern: The rare cycles, 3 days + 1 absent, only Glimmerogg and Loamm are important, they're opposites (Day 2 of one is Day 0 of the other, this can also be automated)
+        The Forbidden Reach WQ-s (which of the 4 elementals is up)
+        Elemental Storms are not predictable and reliable anymore, but you perhaps should know about this

    Shadowlands
+        Zereth Mortis: Cluck, Cluck, Boom (daily) 
*						Fish Eyes (WQ which can be on full reset or midday reset) 
        Korthia: Local Reagents/Oozing with Character (they give awards per covenant and we just say it's possible) 
				 Zelnithop spawning (Based on dailies present in the area)
        The Maw (same patch as Korthia): Tormentors of Torghast with Gralebboih every 18 hours (can be automated)
                https://docs.google.com/spreadsheets/d/1BIYbUzajF79PJU_t3LcnjLxsojv9KTd6WMW_Owg0WZo/edit?gid=1003989903#gid=1003989903
                
        Animated Ulna and Bunny Soul whichever zone they're up in +
		Revendreth: 
+		A Stolen Stone Fiend, 
*		Muck it Up, 
+		Swarming Souls with a weird 4:48 frequency
Battle for Azeroth
*        Waycrest Manor: Witchy Kitchen - vengeful chicken
        Vol'dun assaults (can be automated)

    Legion
        Repeatable Tamers & Family Familiar (they overlap except Andurs & Rydyr not being FF, and Flummox not being good for levelling)
+        Falcosaur Swarm (two up, alternate every 1.5 days) 
WoD -- all Garrison content -- it DOES differ between regions!
        Garrison inn: Mylune with For the Birds and Cowled Ranger with The Huntresses, once per character (this can MAYBE be automated, I am not 100% sure, the Ranger is much rarer)
        Squirt the Wandering Trainer (this goes without saying)

Callings
    Follow a 3 day pattern that goes as follows:
        A Call to X:
            Bastion: Gilded Wader chances (specific treasures, 1-4 per day)
            Maldraxxus: up to 3 Skittering Venomspitter chances and not always present Slime-Coated Crate (I put the coords in because you won't see it unless you zone in to House of Plagues)
            Revendreth: Bleakwood Chest (high spawn chance) & Secret Treasure in a specific location (very low spawn chance)
        Storm the Maw/Challenges in X/Anima Salvage/Rare Resources:
            We only care about Rare Resources there because they spawn treasures in all the zones
        Training in X/Aiding X:
            Only Training in X are important, one of 3 trainees digs out Dirty Glinting Objects. Only 3 combinations are possible and seeing one trainee is enough to know which one it is (I will find the table later)

    Legion Emissaries
		The Dreamweavers 
		Kirin Tor of Dalaran

Weekly and semi-weekly content
*    The Waking Shores Brightblade's Bones (it's a WQ but lasts 3,5 days and resets you know when)
      Maw Assaults (all but Venthyr. 
+			Necro: Lil' Abom (Crafted from treasure pieces scattered round the assault zone) Fodder (completion cache)
*			Fae: Infused Etherwyrm if A Shady Place is up + Invasive Buzzer (completion cache)
+			Kyrian: sly, copperback, screecher
    Uldum 
*		aqir: AqirTunneler, Rotbreath
*		blackEmpire: Wicked Lurker
	Vale of Eternal Blossoms 
	
    Krasarang Wilds: Wanderer's Festival Hatchlings every Sunday (doesn't seem like it should be there but don't feel like creating a single line for MoP


    Anthea, Bert, Crysa, Darkmoon Faire


Zelnithop macro:
/run WorldMapFrame:SetMapID(1961);for pin in WorldMapFrame.pinPools.BonusObjectivePinTemplate:EnumerateActive() do if tContains({63950,63936,63786,63964,63956},pin.questID) then print("Zelnithop: Yes");return;end;end;print("Zelnithop: No")

Quests once per character
Mylune - Everbloom Peachick (For The Birds quest)
Cowled Ranger - Sentinel's Companion (The Huntresses quest)
16 DAY ROTATIONS    
            EU              BOTH                AM/OCE
    day0    mylune
    day1    CowledRanger                        Mylune
    day2    
    day3                    ClawsForConcern
    day4    Mylune          ClawsForConcern
    day5                    ClawsForConcern     Mylune
    day6
    day7
    day8    Mylune          
    day9                                        Mylune
    day10
    day11
    day12   Mylune          
    day13                                       Mylune
    day14                                       CowledRanger
    day15


+    Zaralek Cavern rare spawn zone ROTATIONS
    https://www.wowhead.com/news/zaralek-cavern-rare-and-event-rotation-explained-how-do-rares-work-332822


    Training in X quests -- see colored table in Remte's chat


/framestack


5 layers: BACKGROUND, BORDER, ARTWORK, OVERLAY, HIGHLIGHT
font flags: OUTLINE, THICK, MONOCHROME
fonts: FRIZQT__ , skurri , 
SetFont("Fonts\\FRIZQT__.TTF", 11, "OUTLINE, MONOCHROME")   
    
--set frame bg to green
    bla.bg = bla:CreateTexture(nill, "BACKGROUND")
    bla.bg:SetAllPoints(true)
    bla.bg:SetColorTexture(.2, .6, 0, .8)


BORDERS
    GlowBorderTemplate - bright yellow diffuesed glow ~ 10 px
    InsetFrameTemplate2 - simple gray border ~ 10px - stone-like


Exporting builtin content:
    create shortcut of wow.exe and append " -console" to the target
    run wow.exe and press Tilde to open console
        exportInterfaceFiles colored
        exportInterfaceFiles art
    2 new folders created in the _retail folder.  BlizzardInterfaceCode, BlizzardInterfaceArt







































    f.testArea = CreateFrame("Frame", "bla", f, "InsetFrameTemplate")
    f.testArea:ClearAllPoints()
    f.testArea:SetPoint("BOTTOMLEFT", f, "BOTTOMLEFT", 30, 30)
    f.testArea:SetPoint("BOTTOMRIGHT", f, "BOTTOMRIGHT", -30, 30)
   f.testArea:SetHeight("150")
--    bla.MaxMinButtonFrame.MinimizeButton:Show()
--    f.testArea:ShowButtonBar(self)
    -- f.testArea:SetSize(12, 150)

--    f.testArea.white = f.testArea:CreateTexture(nil, "BACKGROUND")
--    f.testArea.white:ClearAllPoints()
--    f.testArea.white:SetAllPoints(true)
--    f.testArea.white:SetColorTexture(1,1,1)

  f.testArea.btn = CreateFrame("Button", nil, f.testArea, "WowTokenButtonTemplate")
--   f.testArea.btn:SetNormalAtlas("GarrMission_PortraitRing_Darkener")
  f.testArea.btn:ClearAllPoints()
--   f.testArea.btn.FillAnim:Play()
    --   f.testArea.btn:SetSize(140,17)
    --  f.testArea.btn.Slider:SetValue(50)
    --  f.testArea.btn.Slider:SetMinMaxValues(20,120)
    --  f.testArea.btn.Slider:Enable()
  f.testArea.btn:SetPoint("BOTTOMLEFT", f.testArea, "BOTTOMLEFT", 40, 0)

--    f.testArea.bg = f.testArea:CreateTexture(nil, "BACKGROUND", "RarityPipTemplate")
--    f.testArea.bg:SetAllPoints(true)
--    f.testArea.bg:ClearAllPoints()
--       f.testArea.bg:SetSize(36,10)
--    f.testArea.bg:SetPoint("BOTTOMLEFT", f.testArea, "BOTTOMLEFT")

  --3 piece
    -- f.testArea.L = f.testArea:CreateTexture(nil, "BACKGROUND", "Interface\\Buttons\\UI-SilverButtonLG-Left-Up")
    -- f.testArea.L:ClearAllPoints()
    -- f.testArea.L:SetSize(32,64)
    -- f.testArea.L:SetPoint("BOTTOMLEFT", f.testArea, "BOTTOMLEFT")

    -- f.testArea.R = f.testArea:CreateTexture(nil, "BACKGROUND", "Interface\\Buttons\\UI-SilverButtonLG-Right-Up")
    -- f.testArea.R:ClearAllPoints()
    -- f.testArea.R:SetSize(32,64)
    -- f.testArea.R:SetPoint("BOTTOMRIGHT", f.testArea, "BOTTOMRIGHT")

    -- f.testArea.C = f.testArea:CreateTexture(nil, "BACKGROUND", "Interface\\Buttons\\UI-SilverButtonLG-Mid-Up")
    -- f.testArea.C:ClearAllPoints()
    -- f.testArea.C:SetSize(32,64)
    -- f.testArea.C:SetPoint("BOTTOMLEFT", f.testArea.L, "BOTTOMRIGHT")
    -- f.testArea.C:SetPoint("BOTTOMRIGHT", f.testArea.R, "BOTTOMLEFT")

  --3 piece manual
    -- f.testArea.L = f.testArea:CreateTexture(nil, "BACKGROUND")
    -- f.testArea.L:ClearAllPoints()
    -- f.testArea.L:SetSize(7,20)
    -- f.testArea.L:SetTexture("Interface\\Common\\Moneyframe")
    -- f.testArea.L:SetTexCoord(0.953125, 0.9921875, 0, 0.296875)
    -- f.testArea.L:SetPoint("BOTTOMLEFT", f.testArea, "BOTTOMLEFT")

    -- f.testArea.R = f.testArea:CreateTexture(nil, "BACKGROUND")
    -- f.testArea.R:ClearAllPoints()
    -- f.testArea.R:SetSize(7,20)
    -- f.testArea.R:SetTexture("Interface\\Common\\Moneyframe")
    -- f.testArea.R:SetTexCoord(0, 0.0546875, 0, 0.296875)
    -- f.testArea.R:SetPoint("BOTTOMRIGHT", f.testArea, "BOTTOMRIGHT")

    -- f.testArea.C = f.testArea:CreateTexture(nil, "BACKGROUND")
    -- f.testArea.C:ClearAllPoints()
    -- f.testArea.C:SetSize(80,20)
    -- f.testArea.C:SetTexture("Interface\\Common\\Moneyframe")
    -- f.testArea.C:SetTexCoord(0, 0.9921875, 0.3125, 0.609375)
    -- f.testArea.C:SetPoint("BOTTOMLEFT", f.testArea.L, "BOTTOMRIGHT")
    -- f.testArea.C:SetPoint("BOTTOMRIGHT", f.testArea.R, "BOTTOMLEFT")

  --8 piece
    -- f.testArea.TL = f.testArea:CreateTexture(nil, "BACKGROUND", "Talent-Inner-TopLEFT")
    -- f.testArea.TL:ClearAllPoints()
    -- f.testArea.TL:SetPoint("TOPLEFT", f.testArea, "TOPLEFT")
    -- f.testArea.TL:SetSize(14,14)

    -- f.testArea.TR = f.testArea:CreateTexture(nil, "BACKGROUND", "Talent-Inner-TopRight")
    -- f.testArea.TR:ClearAllPoints()
    -- f.testArea.TR:SetSize(14,14)
    -- f.testArea.TR:SetPoint("TOPRIGHT", f.testArea, "TOPRIGHT")

    -- f.testArea.BR = f.testArea:CreateTexture(nil, "BACKGROUND", "Talent-Inner-BotRight")
    -- f.testArea.BR:ClearAllPoints()
    -- f.testArea.BR:SetSize(14,14)
    -- f.testArea.BR:SetPoint("BOTTOMRIGHT", f.testArea, "BOTTOMRIGHT")
    
    -- f.testArea.BL = f.testArea:CreateTexture(nil, "BACKGROUND", "Talent-Inner-BotLeft")
    -- f.testArea.BL:ClearAllPoints()
    -- f.testArea.BL:SetSize(14,14)
    -- f.testArea.BL:SetPoint("BOTTOMLEFT", f.testArea, "BOTTOMLEFT")

    -- f.testArea.T = f.testArea:CreateTexture(nil, "BACKGROUND", "_Talent-Inner-TopTile")
    -- f.testArea.T:ClearAllPoints()
    -- f.testArea.T:SetHeight(8)
    -- f.testArea.T:SetPoint("TOPLEFT", f.testArea.TL, "TOPRIGHT")
    -- f.testArea.T:SetPoint("TOPRIGHT", f.testArea.TR, "TOPLEFT")
    -- f.testArea.T:SetPoint("BOTTOM", f.testArea.TR, "BOTTOM")

    -- f.testArea.B = f.testArea:CreateTexture(nil, "BACKGROUND", "_Talent-Inner-BotTile")
    -- f.testArea.B:ClearAllPoints()
    -- f.testArea.B:SetHeight(8)
    -- f.testArea.B:SetPoint("BOTTOMLEFT", f.testArea.BL, "BOTTOMRIGHT")
    -- f.testArea.B:SetPoint("BOTTOMRIGHT", f.testArea.BR, "BOTTOMLEFT")
    -- f.testArea.B:SetPoint("TOP", f.testArea.BR, "TOP")

    -- f.testArea.L = f.testArea:CreateTexture(nil, "BACKGROUND", "!Talent-Inner-LeftTile")
    -- f.testArea.L:ClearAllPoints()
    -- f.testArea.L:SetWidth(7)
    -- f.testArea.L:SetPoint("TOPLEFT", f.testArea.TL, "BOTTOMLEFT")
    -- f.testArea.L:SetPoint("BOTTOMLEFT", f.testArea.BL, "TOPLEFT")
    -- f.testArea.L:SetPoint("RIGHT", f.testArea.BL, "RIGHT")
    
    -- f.testArea.R = f.testArea:CreateTexture(nil, "BACKGROUND", "!Talent-Inner-RightTile")
    -- f.testArea.R:ClearAllPoints()
    -- f.testArea.R:SetWidth(7)
    -- f.testArea.R:SetPoint("TOPRIGHT", f.testArea.TR, "BOTTOMRIGHT")
    -- f.testArea.R:SetPoint("BOTTOMRIGHT", f.testArea.BR, "TOPRIGHT")
    -- f.testArea.R:SetPoint("LEFT", f.testArea.BR, "LEFT")